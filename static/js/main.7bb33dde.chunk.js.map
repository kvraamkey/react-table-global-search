{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["useTableSearch","searchVal","retrieve","React","filteredData","setFilteredData","origData","setOrigData","searchIndex","setSearchIndex","loading","setLoading","users","searchInd","allValues","crawl","user","fetchData","reqData","getUser","a","fetch","resp","json","data","App","useState","setSearchVal","className","onChange","e","target","value","type","placeholder","map","key","id","name","username","email","Object","values","address","filter","val","join","phone","website","length","ReactDOM","render","document","getElementById"],"mappings":"oPAGaA,EAAiB,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EACjBC,aADiB,IAClDC,EADkD,KACpCC,EADoC,OAEzBF,aAFyB,IAElDG,EAFkD,KAExCC,EAFwC,OAGnBJ,aAHmB,IAGlDK,EAHkD,KAGrCC,EAHqC,OAI3BN,cAJ2B,GAIlDO,EAJkD,KAIzCC,EAJyC,KAkDzD,OArBAR,eAAgB,WACdQ,MAfgB,WAAH,IAAe,gBACET,KADF,sBACdU,EADc,OAE5BL,KACAF,KAEA,IAAMQ,EAAYD,EAAA,KAAU,YAE1B,MAAO,CAAEE,UAhBC,SAARC,EAASC,EAAMF,GAEnB,IAAK,IAAL,KADA,IAAgBA,MAChB,EACE,kBAAWE,EAAP,GAA+BD,EAAMC,EAAD,GAAxC,GACKF,OAAeE,KAAfF,KAEP,SASoBC,CAAlB,GACoBD,eAEtBL,KAEA,GAAWE,SAXE,mCAgBbM,KACC,CAHHd,IAKAA,eAAgB,WACd,KAAe,CACb,IAAMe,EAAUV,EAAA,KAAgB,cAC9B,OAAIQ,kCAAqCf,EAArCe,gBAAJ,EACSV,EAAP,GACF,QAEFD,EACEa,EAAA,QAAe,YACb,mBAICb,OACN,CAACJ,EAAWK,EAdfH,IAgBO,CAAEC,aAAF,EAAgBM,Y,MChDzB,MAAMS,EAAO,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,+CADX,cACRC,EADQ,gBAEKA,EAAKC,OAFV,cAERC,EAFQ,yBAGP,CAAEA,SAHK,2CAAH,qDA2EEC,MArEH,KAAO,MAAD,EACkBtB,IAAMuB,SAAS,MADjC,mBACTzB,EADS,KACE0B,EADF,OAGkB3B,EAAe,CAC/CC,YACAC,SAAUiB,IAFJf,EAHQ,EAGRA,aAAcM,EAHN,EAGMA,QAKtB,OACE,yBAAKkB,UAAU,gBACb,2EACA,wKAIA,yBAAKA,UAAU,6CACb,2BACEC,SAAWC,GAAMH,EAAaG,EAAEC,OAAOC,OACvCC,KAAK,SACLL,UAAU,iDACVM,YAAY,wDAIhB,2BAAON,UAAU,wBACf,+BACE,wBAAIA,UAAU,iBACZ,oCACA,wCACA,qCACA,uCACA,qCACA,yCAGJ,+BACGlB,GACC,4BACE,yCAGFA,GACAN,EAAa+B,IAAKnB,GAChB,wBAAIoB,IAAKpB,EAAKqB,IACZ,4BAAKrB,EAAKsB,MACV,4BAAKtB,EAAKuB,UACV,4BAAKvB,EAAKwB,OACV,4BACE,iCACGC,OAAOC,OAAO1B,EAAK2B,SACjBC,OAAQC,GAAuB,kBAARA,GACvBC,KAAK,QAGZ,4BAAK9B,EAAK+B,OACV,4BAAK/B,EAAKgC,YAGdtC,GAAmC,IAAxBN,EAAa6C,QACxB,4BACE,4CCjEdC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7bb33dde.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './styles.module.css';\n\nexport const useTableSearch = ({ searchVal, retrieve }) => {\n  const [filteredData, setFilteredData] = React.useState([]);\n  const [origData, setOrigData] = React.useState([]);\n  const [searchIndex, setSearchIndex] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  const crawl = (user, allValues) => {\n    if (!allValues) allValues = [];\n    for (var key in user) {\n      if (typeof user[key] === 'object') crawl(user[key], allValues);\n      else allValues.push(user[key] + ' ');\n    }\n    return allValues;\n  };\n\n  const fetchData = async () => {\n    const { data: users } = await retrieve();\n    setOrigData(users);\n    setFilteredData(users);\n\n    const searchInd = users.map((user) => {\n      const allValues = crawl(user);\n      return { allValues: allValues.toString() };\n    });\n    setSearchIndex(searchInd);\n\n    if (users) setLoading(false);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    fetchData();\n  }, [retrieve]);\n\n  React.useEffect(() => {\n    if (searchVal) {\n      const reqData = searchIndex.map((user, index) => {\n        if (user.allValues.toLowerCase().indexOf(searchVal.toLowerCase()) >= 0)\n          return origData[index];\n        return null;\n      });\n      setFilteredData(\n        reqData.filter((user) => {\n          if (user) return true;\n          return false;\n        })\n      );\n    } else setFilteredData(origData);\n  }, [searchVal, origData, searchIndex]);\n\n  return { filteredData, loading };\n};\n","import React from 'react';\n\nimport { useTableSearch } from 'table-global-search';\nimport 'table-global-search/dist/index.css';\n\nconst getUser = async () => {\n  const resp = await fetch('https://jsonplaceholder.typicode.com/users/');\n  const data = await resp.json();\n  return { data };\n};\n\nconst App = () => {\n  const [searchVal, setSearchVal] = React.useState(null);\n\n  const { filteredData, loading } = useTableSearch({\n    searchVal,\n    retrieve: getUser\n  });\n\n  return (\n    <div className='w3-container'>\n      <h3>Make a Search Engine for Any Table in React</h3>\n      <p>\n        This method is a generic one and would work with any type of table that\n        involves feeding a data source to it in order to render the rows.\n      </p>\n      <div className='search-bar w3-margin-bottom w3-margin-top'>\n        <input\n          onChange={(e) => setSearchVal(e.target.value)}\n          type='search'\n          className='w3-input w3-light-black w3-border w3-text-gray'\n          placeholder='Filter by tags and attributes or search by keyword'\n        />\n      </div>\n\n      <table className='w3-table-all w3-card'>\n        <thead>\n          <tr className='w3-light-grey'>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>Website</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading && (\n            <tr>\n              <td>loading</td>\n            </tr>\n          )}\n          {!loading &&\n            filteredData.map((user) => (\n              <tr key={user.id}>\n                <td>{user.name}</td>\n                <td>{user.username}</td>\n                <td>{user.email}</td>\n                <td>\n                  <address>\n                    {Object.values(user.address)\n                      .filter((val) => typeof val !== 'object')\n                      .join(', ')}\n                  </address>\n                </td>\n                <td>{user.phone}</td>\n                <td>{user.website}</td>\n              </tr>\n            ))}\n          {!loading && filteredData.length === 0 && (\n            <tr>\n              <td>No data</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}